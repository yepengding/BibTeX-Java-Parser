
@inproceedings{ding_derepo_2020,
	title = {Derepo: a distributed privacy-preserving data repository with decentralized access control for smart health},
	copyright = {All rights reserved},
	isbn = {1-72816-550-4},
	booktitle = {2020 7th {IEEE} {International} {Conference} on {Cyber} {Security} and {Cloud} {Computing} ({CSCloud})/2020 6th {IEEE} {International} {Conference} on {Edge} {Computing} and {Scalable} {Cloud} ({EdgeCom})},
	publisher = {IEEE},
	author = {Ding, Yepeng and Sato, Hiroyuki},
	year = {2020},
	pages = {29--35},
}

@inproceedings{ding_dagbase_2020,
	title = {Dagbase: a decentralized database platform {Using} {DAG}-based consensus},
	copyright = {All rights reserved},
	isbn = {1-72817-303-5},
	booktitle = {2020 {IEEE} 44th {Annual} {Computers}, {Software}, and {Applications} {Conference} ({COMPSAC})},
	publisher = {IEEE},
	author = {Ding, Yepeng and Sato, Hiroyuki},
	year = {2020},
	pages = {798--807},
}

@inproceedings{ding_bloccess_2020,
	title = {Bloccess: towards fine-grained access control using blockchain in a distributed untrustworthy environment},
	copyright = {All rights reserved},
	isbn = {1-72811-035-1},
	booktitle = {2020 8th {IEEE} {International} {Conference} on {Mobile} {Cloud} {Computing}, {Services}, and {Engineering} ({MobileCloud})},
	publisher = {IEEE},
	author = {Ding, Yepeng and Sato, Hiroyuki},
	year = {2020},
	pages = {17--22},
}

@inproceedings{ding_formalizing_2020,
	title = {Formalizing and {Verifying} {Decentralized} {Systems} with {Extended} {Concurrent} {Separation} {Logic}},
	copyright = {All rights reserved},
	booktitle = {International {Conference} on {Algorithms} and {Architectures} for {Parallel} {Processing}},
	publisher = {Springer},
	author = {Ding, Yepeng and Sato, Hiroyuki},
	year = {2020},
	pages = {480--494},
}

@article{ding_formalism-driven_2022,
	title = {Formalism-{Driven} {Development}: {Concepts}, {Taxonomy}, and {Practice}},
	volume = {12},
	copyright = {All rights reserved},
	issn = {2076-3417},
	url = {https://www.mdpi.com/2076-3417/12/7/3415},
	doi = {10.3390/app12073415},
	abstract = {Formal methods are crucial in program specification and verification. Instead of building cases to test functionalities, formal methods specify functionalities as properties and mathematically prove them. Nevertheless, the applicability of formal methods is limited in most development processes due to the requirement of mathematical knowledge for developers. To promote the application of formal methods, we formulate formalism-driven development (FDD), which is an iterative and incremental development process that guides developers to adopt proper formal methods throughout the whole development lifespan. In FDD, system graphs, a variant of transition systems optimized for usability, are designed to model system structures and behaviors with representative properties. System graphs are built iteratively and incrementally via refinement. Properties of system graphs are specified in propositional and temporal logics and verified by model-checking techniques with interpretation over transition system. In addition, skeleton programs are generated based on system graphs and expose implementable interfaces for executing external algorithms and emitting observable effects. Furthermore, we present Seniz, a framework that practicalizes and automates FDD. In this paper, we explicate the concepts and taxonomy of FDD and discuss its practice.},
	number = {7},
	journal = {Applied Sciences},
	author = {Ding, Yepeng and Sato, Hiroyuki},
	year = {2022},
}
